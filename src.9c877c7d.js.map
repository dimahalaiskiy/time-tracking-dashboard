{"version":3,"sources":["data.json","index.js"],"names":["module","exports","title","svg","color","timeframes","daily","current","previous","weekly","monthly","dataJsonString","JSON","stringify","json","data","parse","cardsParentEl","document","querySelector","cureentDurationButton","dailyButton","weeklyButton","monthlyButton","dailyMarkup","map","join","weeklyMarkup","insertAdjacentHTML","monthlyMarkup","cureentDurationOnClick","e","isCurrent","classList","remove","target","dataset","action","deleteNoNeededLi","add","innerHTML","addEventListener"],"mappings":"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","file":"src.9c877c7d.js","sourceRoot":"../src","sourcesContent":["module.exports=[{title:\"Work\",svg:\"#icon-work\",color:\"green\",timeframes:{daily:{current:5,previous:7},weekly:{current:32,previous:36},monthly:{current:103,previous:128}}},{title:\"Play\",svg:\"#icon-play\",color:\"orange\",timeframes:{daily:{current:1,previous:2},weekly:{current:10,previous:8},monthly:{current:23,previous:29}}},{title:\"Study\",svg:\"#icon-study\",color:\"lightblue\",timeframes:{daily:{current:0,previous:1},weekly:{current:4,previous:7},monthly:{current:13,previous:19}}},{title:\"Exercise\",svg:\"#icon-exercise\",color:\"yellow\",timeframes:{daily:{current:1,previous:1},weekly:{current:4,previous:5},monthly:{current:11,previous:18}}},{title:\"Social\",svg:\"#icon-social\",color:\"violet\",timeframes:{daily:{current:1,previous:3},weekly:{current:5,previous:10},monthly:{current:21,previous:23}}},{title:\"Self Care\",svg:\"#icon-self-care\",color:\"red\",timeframes:{daily:{current:0,previous:1},weekly:{current:2,previous:2},monthly:{current:7,previous:11}}}];","import json from \"./data.json\"\nimport icons from \"./images/icons.svg\"\n\n\nconst dataJsonString = JSON.stringify(json);\nconst data = JSON.parse(dataJsonString);\n\n\nconst cardsParentEl = document.querySelector('.cards')\nconst cureentDurationButton = document.querySelector('.form-period')\nconst dailyButton = document.querySelector('[data-action=\"daily\"]')\nconst weeklyButton = document.querySelector('[data-action=\"weekly\"]')\nconst monthlyButton = document.querySelector('[data-action=\"monthly\"]')\n\n\nfunction dailyMarkup() { \n   return data.map(( { title , svg, color,  timeframes : { daily: { current, previous} }}) => {\n        return `<li class=\"card ${color}\">\n        <svg class=\"icon-svg\">\n          <use xlink:href=\"${svg}\"></use>\n        </svg>\n        <h2 class=\"heading-occupation\">${title}</h2>\n        <div class=\"card-option\">\n          <ul class=\"card-description\">\n            <li class=\"card-text\">${title}</li>\n            <li class=\"card-menu\">\n              <a href=\"#\"></a>\n            </li>\n          </ul>\n          <h2 class=\"heading-hours\">${current}hrs</h2>\n          <p class=\"paragraph-duration\">Last day - ${previous}</p>\n        </div>\n      </li>`\n    }).join('')\n}\n\ncardsParentEl.insertAdjacentHTML('beforeend', dailyMarkup(data))\n\nfunction weeklyMarkup() {\n  return data.map(( { title , svg, color,  timeframes : { weekly: { current, previous} }}) => {\n    return `<li class=\"card ${color}\">\n    <svg class=\"icon-svg\">\n      <use xlink:href=\"${svg}\"></use>\n    </svg>\n    <h2 class=\"heading-occupation\">${title}</h2>\n    <div class=\"card-option\">\n      <ul class=\"card-description\">\n        <li class=\"card-text\">${title}</li>\n        <li class=\"card-menu\">\n          <a href=\"#\"></a>\n        </li>\n      </ul>\n      <h2 class=\"heading-hours\">${current}hrs</h2>\n      <p class=\"paragraph-duration\">Last week - ${previous}</p>\n    </div>\n  </li>`\n}).join('')\n}\n\nconst monthlyMarkup = () => {\n  return data.map(( { title , svg, color,  timeframes : { monthly: { current, previous} }}) => {\n    return `<li class=\"card ${color}\">\n    <svg class=\"icon-svg\">\n      <use xlink:href=\"${svg}\"\"></use>\n    </svg>\n    <h2 class=\"heading-occupation\">${title}</h2>\n    <div class=\"card-option\">\n      <ul class=\"card-description\">\n        <li class=\"card-text\">${title}</li>\n        <li class=\"card-menu\">\n          <a href=\"#\"></a>\n        </li>\n      </ul>\n      <h2 class=\"heading-hours\">${current}hrs</h2>\n      <p class=\"paragraph-duration\">Last month - ${previous}</p>\n    </div>\n  </li>`\n}).join('')\n}\n\nconst cureentDurationOnClick = (e) => {\n  const isCurrent = cureentDurationButton.querySelector('.is-current')\n  if(isCurrent) {\n    isCurrent.classList.remove('is-current')\n  } \n\n  switch (e.target.dataset.action) {\n    case 'daily':\n      deleteNoNeededLi()\n      cardsParentEl.insertAdjacentHTML('beforeend', dailyMarkup(data))\n      dailyButton.classList.add('is-current')\n      break;\n    case 'weekly':\n      deleteNoNeededLi()\n      cardsParentEl.insertAdjacentHTML('beforeend', weeklyMarkup(data))\n      weeklyButton.classList.add('is-current')\n      break;\n    case 'monthly':\n      deleteNoNeededLi()\n      cardsParentEl.insertAdjacentHTML('beforeend', monthlyMarkup(data))\n      monthlyButton.classList.add('is-current')\n      break;\n  }\n}\n\ncureentDurationButton.addEventListener('click', cureentDurationOnClick)\n  \nfunction deleteNoNeededLi() {\n  cardsParentEl.innerHTML = \"\"\n}\n"]}